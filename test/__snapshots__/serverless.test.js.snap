// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`serverless packaging generates correct cloudformation template 1`] = `
Object {
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Outputs": Object {
    "ServerlessDeploymentBucketName": Object {
      "Value": Object {
        "Ref": "ServerlessDeploymentBucket",
      },
    },
  },
  "Resources": Object {
    "ServerlessDeploymentBucket": Object {
      "Type": "AWS::S3::Bucket",
    },
    "SesForwarderBucketReceiptRule": Object {
      "DependsOn": Array [
        "SesForwarderEmailBucket",
      ],
      "Properties": Object {
        "Rule": Object {
          "Actions": Array [
            Object {
              "S3Action": Object {
                "BucketName": "TheBucketName",
              },
            },
          ],
          "Enabled": true,
          "Name": "TEST_serverless-respat-ses-forwarder-SesForwarder-s3-email-store",
          "Recipients": Array [
            "email@domain",
          ],
          "ScanEnabled": true,
        },
        "RuleSetName": "TheRulesetName",
      },
      "Type": "AWS::SES::ReceiptRule",
    },
    "SesForwarderEmailBucket": Object {
      "Properties": Object {
        "AccessControl": "Private",
        "BucketName": "TheBucketName",
      },
      "Type": "AWS::S3::Bucket",
    },
    "SesForwarderEmailBucketPolicy": Object {
      "DependsOn": Array [
        "SesForwarderEmailBucket",
      ],
      "Properties": Object {
        "Bucket": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "SesForwarderEmailBucket",
              },
            ],
          ],
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "aws:Referer": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ses.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "SesForwarderEmailBucket",
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "TEST_serverless-respat-ses-forwarder-SesForwarder-allow-ses-to-write",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SesForwarderLambdaForwardRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:*",
                },
                Object {
                  "Action": "ses:SendRawEmail",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::TheBucketName/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "TEST_serverless-respat-ses-forwarder-SesForwarder-role-policy",
          },
        ],
        "RoleName": "TEST_serverless-respat-ses-forwarder-SesForwarder-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "SesForwarderLambdaReceiptRule": Object {
      "DependsOn": Array [
        "SesForwarderEmailBucket",
        "SesForwarderEmailBucketPolicy",
        "SesForwarderBucketReceiptRule",
      ],
      "Properties": Object {
        "After": "TEST_serverless-respat-ses-forwarder-SesForwarder-s3-email-store",
        "Rule": Object {
          "Actions": Array [
            Object {
              "LambdaAction": Object {
                "FunctionArn": Object {
                  "Fn::GetAtt": Array [
                    "TheLambdaFunctionNameLambdaFunction",
                    "Arn",
                  ],
                },
                "InvocationType": "Event",
              },
            },
          ],
          "Enabled": true,
          "Name": "TEST_serverless-respat-ses-forwarder-SesForwarder-email-lambda-rule",
          "Recipients": Array [
            "email@domain",
          ],
          "ScanEnabled": true,
        },
        "RuleSetName": "TheRulesetName",
      },
      "Type": "AWS::SES::ReceiptRule",
    },
    "SesForwarderLambdaSesPermission": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "TheLambdaFunctionNameLambdaFunction",
            "Arn",
          ],
        },
        "Principal": "ses.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
